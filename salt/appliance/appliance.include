#!/bin/bash

abort_ifnot_cleanrepo(){
    repo="${1:-.}"
    if ! git -C $repo diff-files --quiet --ignore-submodules --; then
        echo "error: abort, your working directory is not clean."
        git  -C $repo --no-pager diff-files --name-status -r --ignore-submodules --
        return 1
    fi
    if ! git -C $repo diff-index --cached --quiet HEAD --ignore-submodules --; then
        echo "error: abort, you have cached/staged changes"
        git -C $repo --no-pager diff-index --cached --name-status -r --ignore-submodules HEAD --
        return 1
    fi
    if test "$(git -C $repo ls-files --other --exclude-standard --directory)" != ""; then
        echo "error: abort, working directory has extra files"
        git -C $repo --no-pager ls-files --other --exclude-standard --directory
        return 1
    fi
    if test "$(git -C $repo log --branches --not --remotes --pretty=format:'%H')" != ""; then
        echo "error: abort, there are unpushed changes"
        git -C $repo --no-pager log --branches --not --remotes --pretty=oneline
        return 1
    fi
    return 0
}

appliance_status () {
    # call(Title, Text)
    # or call("--disable")
    local templatefile=/etc/appliance/app-template.html
    local resultfile=/var/www/html/503.html
    local title text
    if test "$1" = "--disable"; then
        if test -e $resultfile; then
            rm -f $resultfile
        fi
    else
        echo "INFO: appliance status: $1 : $2"
        title=$(echo "$1" | tr / \\/)
        text=$(echo "$2" | tr / \\/)
        cat $templatefile |
            sed -re "s/\{\{ ?title ?\}\}/$title/g" |
            sed -re "s/\{\{ ?text ?\}\}/$text/g" > $resultfile
        if test "$(id -u)" = "0"; then
            # if currently root, set owner to app, so app can also override current status
            chown app:app $resultfile
        fi
    fi
}

appliance_status_starting () {
    appliance_status "Appliance Startup" "Starting up"
}

appliance_exit()
{
    appliance_status "$1" "$2"
    exit 1
}

appliance_exit_standby () {
    appliance_exit "Appliance Standby" "Appliance is in standby"
}

is_truestr () {
    test "$(printf "%s" "$1" | tr A-Z a-z)" = "true"
}

is_falsestr () {
    test "$(printf "%s" "$1" | tr A-Z a-z)" != "true"
}
