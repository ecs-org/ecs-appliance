# ECS prometheus alerts, needs node-exporter >= 1.6

ALERT NodeRebootsTooOften
    IF changes(node_boot_time_seconds[1d]) > 1
    ANNOTATIONS {
        summary = "Node rebooots too often",
        description = "Node {{ $labels.instance }} reboots too often ({{ $value }} is more than 1 time per 1d)",
    }

ALERT NodeFilesystemFreeLow
    IF (100 * node_filesystem_avail_bytes{mountpoint=~"/rootfs(|/boot|/data|/volatile)"} / node_filesystem_size_bytes{mountpoint=~"/rootfs(|/boot|/data|/volatile)"}) < 15
    ANNOTATIONS {
        summary = "Node filesystem available space on {{ $labels.device }} is low",
        description = "Node {{ $labels.instance }}'s filesystem {{ $labels.device }} mounted at {{ $labels.mountpoint }} has less than 15% available disk space remaining.",
    }

ALERT NodeMemoryUsageHigh400mb
    IF (node_memory_MemFree_bytes + node_memory_Cached_bytes) / 1048576 < 400
    FOR 30s
    ANNOTATIONS {
        summary = "Instance {{ $labels.instance }} memory usage is high",
        description = "This device's free & cached memory together is less than the threshold (400mb) with a value of {{ $value }}.",
    }

ALERT NodeMemoryUsageHigh80percent
    IF (node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Cached_bytes + node_memory_Buffers_bytes) ) / node_memory_MemTotal_bytes * 100 > 80
    FOR 30s
    ANNOTATIONS {
        summary = "Instance {{ $labels.instance }} memory usage is high",
        description = "This device's used memory is more than the threshold (80%) with a value of {{ $value }}.",
    }

ALERT NodeLoadHigh
    IF node_load1 > machine_cpu_cores/2
    FOR 2m
    ANNOTATIONS {
        summary = "Instance {{ $labels.instance }} under high load",
        description = "{{ $labels.instance }} of job {{ $labels.job }} is under high load.",
    }

ALERT BackupMissed
    # divide time() by 3600 to get hours
    IF (time() / 3600) - (backup_last_start_time / 3600) > 32
    ANNOTATIONS {
        summary = "Backup run missed",
        description = "No sucessfull backup since 32h. Last sucessfull backup was at {{ $value }}. Backup should run every 24h"
    }

ALERT UpdateMissed
    # divide time() by 86400 to get days
    IF (time() / 86400) - (update_last_call / 86400) > 8
    ANNOTATIONS {
        summary = "Update run missed",
        description = "No sucessfull update since more than 8 days. Last update run was {{ $value }} days ago. Update should run once a week"
    }
