    def sysctl_config(self):
        sysctl_conf = '/etc/sysctl.d/30-ECS.conf'
        params = {
            'kernel.shmmax': '2147483648',       # 2 GB
        }
        conf = ''
        for k, v in params.iteritems():
            self.local(['sysctl', '-w', '{0}={1}'.format(k, v)])
            conf += '{0} = {1}'.format(k, v)
        conf += '\n'
        tmp_fd, tmp_name = tempfile.mkstemp()
        os.write(tmp_fd, conf)
        os.close(tmp_fd)
        cat = subprocess.list2cmdline(['cat', tmp_name])
        tee = subprocess.list2cmdline((['sudo'] if self.use_sudo else []) + ['tee', sysctl_conf])
        local('{0} | {1} > /dev/null'.format(cat, tee))
        os.remove(tmp_name)


    def postgresql_config(self):
        postgresql_conf = '/etc/postgresql/{0}/main/postgresql.conf'.format(self.postgresql_version())
        _marker = '# === ECS config below: do not edit, autogenerated ==='
        conf = ''
        self.local(['cp', postgresql_conf, postgresql_conf + '.bak'])
        with open(postgresql_conf, 'r') as f:
            for line in f:
                if line.strip('\n') == _marker:
                    break
                conf += line
        conf += '\n'.join([
            _marker,
            '# manual tuned settings: 1.10.2014 (similar to pgtune -i postgresql.conf -M 4294967296 -c 40 -T Web)',
            'wal_sync_method = fdatasync',
            'max_connections = 40',
            'maintenance_work_mem = 192MB',
            'effective_cache_size = 2304MB',
            'work_mem = 64MB',
            'wal_buffers = 4MB',
            'shared_buffers = 768MB',
            'checkpoint_segments = 8',
            'checkpoint_completion_target = 0.7',
            '# track long running queries',
            'track_activity_query_size = 4096',
            'log_min_duration_statement = 4000',
            "log_line_prefix = 'user=%u,db=%d '",
            "statement_timeout = 10min",
        ]) + '\n'
        tmp_fd, tmp_name = tempfile.mkstemp()
        os.write(tmp_fd, conf)
        os.close(tmp_fd)
        cat = subprocess.list2cmdline(['cat', tmp_name])
        tee = subprocess.list2cmdline((['sudo'] if self.use_sudo else []) + ['tee', postgresql_conf])
        local('{0} | {1} > /dev/null'.format(cat, tee))
        os.remove(tmp_name)
