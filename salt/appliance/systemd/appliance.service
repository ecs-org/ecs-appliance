[Unit]
Description=Appliance

Requires=prepare-env.service prepare-appliance.service prepare-ecs.service
After=prepare-env.service prepare-appliance.service prepare-ecs.service
Before=appliance-cleanup.service
OnFailure=appliance-failed@%n.service

[Service]
Type=simple
Restart=always
TimeoutStartSec=5min
# one minor change service restart takes 3min30sec
# if service is restartet 3 times within 12 minutes it enters failed state
# use `systemctl reset-failed` to restart rate counter
StartLimitInterval=12min
StartLimitBurst=3
Environment=UNITNAME=%n
# XXX manual include env because EnvironmentFile is missing multiline var support
# EnvironmentFile=/app/active-env.env
Environment=ENV_YML=/app/active-env.yml
WorkingDirectory=/etc/appliance/ecs
ExecStart=/bin/bash -c '. /usr/local/etc/env.include; userdata_to_env ecs,appliance; \
    exec /usr/local/bin/docker-compose up --abort-on-container-exit'
ExecStartPost=/bin/bash -c '. /usr/local/etc/env.include; userdata_to_env ecs,appliance; \
    sleep 30; \
    (docker images -q ecs/ecs:latest || echo "invalid") > /etc/appliance/last_running_ecs_image; \
    . /usr/local/etc/appliance.include; appliance_status --disable'
ExecStop=/bin/bash -c '. /usr/local/etc/env.include; userdata_to_env ecs,appliance; \
    /usr/local/bin/docker-compose -f /etc/appliance/ecs/docker-compose.yml stop'
ExecStopPost=/bin/bash -c '. /usr/local/etc/env.include; userdata_to_env ecs,appliance; \
    . /usr/local/etc/appliance.include; appliance_exit_standby'

[Install]
WantedBy=multi-user.target
