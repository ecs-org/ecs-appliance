[Unit]
Description=Appliance
ConditionPathExists=!/run/appliance-failed
ConditionFileNotEmpty=/run/active-env.yml
Requires=prepare-env.service prepare-appliance.service prepare-ecs.service watch-ecs-ca.path
After=prepare-ecs.service
OnFailure=appliance-failed@%n.service
# use `rm /run/appliance-failed; systemctl reset-failed` to recover from a failed state

[Service]
Type=simple
Restart=always
TimeoutStartSec=5min
StartLimitInterval=15min
StartLimitBurst=3
Environment=UNITNAME=%n
# XXX include env using env.include because systemd EnvironmentFile is missing multiline var support
Environment=ENV_YML=/run/active-env.yml
WorkingDirectory=/app/etc/ecs
ExecStart=/bin/bash -c '. /usr/local/share/appliance/env.include; userdata_to_env ecs,appliance; \
    exec /usr/local/bin/docker-compose up --abort-on-container-exit'
ExecStartPost=/bin/bash -c '. /usr/local/share/appliance/env.include; userdata_to_env ecs,appliance; \
    sleep 30; \
    (docker images -q ecs/ecs:latest || echo "invalid") > /app/etc/tags/last_running_ecs_image; \
    rm -f /app/etc/tags/last_failed_ecs; \
    . /usr/local/share/appliance/appliance.include; appliance_status --disable; \
    systemctl --no-block start appliance-cleanup'
ExecStop=/bin/bash -c '. /usr/local/share/appliance/env.include; userdata_to_env ecs,appliance; \
    /usr/local/bin/docker-compose -f /app/etc/ecs/docker-compose.yml stop'
ExecStopPost=/bin/bash -c '. /usr/local/share/appliance/env.include; userdata_to_env ecs,appliance; \
    . /usr/local/share/appliance/appliance.include; appliance_status "Appliance Standby" "Appliance is stopped"'

[Install]
WantedBy=multi-user.target
