#!/bin/bash

ECS_DATABASE="${ECS_DATABASE:-ecs}"
ECS_GIT_BRANCH="${ECS_GIT_BRANCH:-master}"
ECS_GIT_SOURCE="${ECS_GIT_SOURCE:-ssh://git@gogs.omoikane.ep3.at:10022/ecs/ecs.git}"
APPLIANCE_GIT_BRANCH=${APPLIANCE_GIT_BRANCH:-master}
APPLIANCE_GIT_SOURCE=${APPLIANCE_GIT_SOURCE:-ssh://git@gogs.omoikane.ep3.at:10022/ecs/ecs-appliance.git}

sentry_entry () {
    last_running_ecs=$((cat /etc/appliance/last_running_ecs || echo "invalid") 2> /dev/null)
    last_build_ecs=$((cat /etc/appliance/last_build_ecs || echo "invalid") 2> /dev/null)
    last_running_appliance=$((cat /etc/appliance/last_running_appliance || echo "invalid") 2> /dev/null)
    last_running_ecs_image=$((cat /etc/appliance/last_running_ecs_image || echo "invalid") 2> /dev/null)
    current_appliance=$(gosu app git -C /app/appliance rev-parse HEAD)
    tags="{\"group\": \"$1\", \
        \"last_running_ecs\": \"$last_running_ecs\", \
        \"last_build_ecs\": \"$last_build_ecs\", \
        \"last_running_appliance\": \"$last_running_appliance\", \
        \"last_running_ecs_image\": \"$last_running_ecs_image\"}"

    printf "Level: %s Group: %s Message: %s" "$3" "$1" "$2"
    if test -n "$APPLIANCE_SENTRY_DSN"; then
        SENTRY_DSN="$APPLIANCE_SENTRY_DSN" /usr/local/bin/ravencat.py \
            --culprit ${UNITNAME:-shellscript} \
            --logger appliance.status \
            --release "$current_appliance" \
            --site "$APPLIANCE_DOMAIN"  \
            --level "${3:-critical}" \
            --tags "$tags" \
            "$2"
    fi
}

appliance_status () {
    # call(Title, Text)
    # or call("--disable")
    local templatefile=/etc/appliance/app-template.html
    local resultfile=/var/www/html/503.html
    local title text
    if test "$1" = "--disable"; then
        if test -e $resultfile; then
            rm -f $resultfile
            sentry_entry "Appliance Running" "Appliance started" "info"
        fi
    else
        echo "INFO: appliance status: $1 : $2"
        title=$(echo "$1" | tr / \\/)
        text=$(echo "$2" | tr / \\/)
        cat $templatefile |
            sed -r "s/\{\{ ?title ?\}\}/$title/g;s/\{\{ ?text ?\}\}/$text/g" > $resultfile
        if test "$(id -u)" = "0"; then
            # if currently root, set owner to app, so app can also override current status
            chown app:app $resultfile
        fi
    fi
}

appliance_status_starting () {
    appliance_status "Appliance Startup" "Starting up"
}

appliance_exit()
{
    appliance_status "$1" "$2"
    sentry_entry "$1" "$2" "$3"
    exit 1
}

appliance_exit_standby () {
    appliance_exit "Appliance Standby" "Appliance is in standby" "warning"
}

is_truestr () {
    test "$(printf "%s" "$1" | tr A-Z a-z)" = "true"
}

is_falsestr () {
    test "$(printf "%s" "$1" | tr A-Z a-z)" != "true"
}
