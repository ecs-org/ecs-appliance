version: "2"

services:

  ecs.web:
    build:
      context: ecs
      args:
        - http_proxy
    image: ecs/ecs
    volumes:
      - /data/ecs-storage-vault:/app/ecs-storage-vault
      - /data/ecs-ca:/app/ecs-ca
      - /data/ecs-gpg:/app/ecs-gpg
      - /volatile/ecs-cache:/app/ecs-cache
    environment:
      - ECS_SETTINGS=${ECS_SETTINGS}
      - ECS_USERSWITCHER_ENABLED=${ECS_USERSWITCHER_ENABLED}
    env_file:
      - service_urls.env
      - database_url.env
    ports:
      - "127.0.0.1:5000:5000"
      - "{{ salt['pillar.get']('docker:ip') }}:1717:1717"
    links:
      - redis
      - memcached
    network_mode: "bridge"
    command: simple

  ecs.worker:
    image: ecs/ecs
    volumes:
      - /data/ecs-storage-vault:/app/ecs-storage-vault
      - /data/ecs-ca:/app/ecs-ca
      - /data/ecs-gpg:/app/ecs-gpg
      - /volatile/ecs-cache:/app/ecs-cache
    environment:
      - ECS_SETTINGS=${ECS_SETTINGS}
    env_file:
      - service_urls.env
      - database_url.env
    depends_on:
      - ecs.web
    links:
      - redis
      - memcached
    network_mode: "bridge"
    command: worker

  ecs.smtpd:
    image: ecs/ecs
    environment:
      - ECS_SETTINGS=${ECS_SETTINGS}
    env_file:
      - service_urls.env
      - database_url.env
    ports:
      - "127.0.0.1:5025:8025"
    links:
      - redis
      - memcached
    network_mode: "bridge"
    command: smtpd

  ecs.beat:
    image: ecs/ecs
    environment:
      - ECS_SETTINGS=${ECS_SETTINGS}
    env_file:
      - service_urls.env
      - database_url.env
    depends_on:
      - ecs.worker
    links:
      - redis
      - memcached
    network_mode: "bridge"
    command: run /app/env/bin/celery -A ecs beat -l info

  memcached:
    image: memcached
    network_mode: "bridge"
    command: memcached -m 128m -I 5m
    # max-memory= 128mb, max-item-size= 5mb

  memcached-exporter:
    image: prom/memcached-exporter
    network_mode: "bridge"
    ports:
      - "{{ salt['pillar.get']('docker:ip') }}:9150:9150"
    links:
      - memcached
    command: -memcached.address ecs_memcached_1:11211

  redis:
    image: redis:3
    volumes:
      - /volatile/redis:/data
    network_mode: "bridge"

  redis_exporter:
    image: oliver006/redis_exporter
    network_mode: "bridge"
    ports:
      - "{{ salt['pillar.get']('docker:ip') }}:9121:9121"
    links:
      - redis
    command: -redis.addr redis://ecs_redis_1:6379

  mocca:
    build:
      context: mocca
      args:
        - http_proxy
    image: ecs/mocca
    # mem limit= -Xmx1536m + 120m
    mem_limit: 1656m
    environment:
      - HOSTNAME=${APPLIANCE_DOMAIN}
    volumes:
      - "/app/etc/server.cert.pem:/app/import/server.cert.pem:ro"
    ports:
      - "127.0.0.1:5090:8080"
    network_mode: "bridge"

  pdfas:
    build:
      context: pdfas
      args:
        - http_proxy
    image: ecs/pdfas
    # mem limit= -Xmx1024m + 120m
    mem_limit: 1144m
    environment:
      - HOSTNAME=${APPLIANCE_DOMAIN}
    volumes:
      - "/app/etc/server.cert.pem:/app/import/server.cert.pem:ro"
    ports:
      - "127.0.0.1:5095:8080"
    network_mode: "bridge"
