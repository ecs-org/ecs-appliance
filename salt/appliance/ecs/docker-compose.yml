version: "2"

services:

  ecs.web:
    build:
      context: ecs
      args:
        - http_proxy
    image: ecs/ecs
    volumes:
      - /data/ecs-storage-vault:/app/ecs-storage-vault
      - /data/ecs-ca:/app/ecs-ca
      - /volatile/ecs-cache:/app/ecs-cache
    environment:
      - ECS_SETTINGS=${ECS_SETTINGS}
      - ECS_VAULT_ENCRYPT=${ECS_VAULT_ENCRYPT}
      - ECS_VAULT_SIGN=${ECS_VAULT_SIGN}
    env_file:
      - service_urls.env
      - database_url.env
    ports:
      - "127.0.0.1:5000:5000"
    links:
      - redis
      - memcached
    network_mode: "bridge"
    command: web

  ecs.worker:
    image: ecs/ecs
    volumes:
      - /data/ecs-storage-vault:/app/ecs-storage-vault
      - /data/ecs-ca:/app/ecs-ca
      - /volatile/ecs-cache:/app/ecs-cache
    environment:
      - ECS_SETTINGS=${ECS_SETTINGS}
      - ECS_VAULT_ENCRYPT=${ECS_VAULT_ENCRYPT}
      - ECS_VAULT_SIGN=${ECS_VAULT_SIGN}
    env_file:
      - service_urls.env
      - database_url.env
    links:
      - redis
      - memcached
    network_mode: "bridge"
    command: worker

  ecs.smtpd:
    image: ecs/ecs
    environment:
      - ECS_SETTINGS=${ECS_SETTINGS}
    env_file:
      - service_urls.env
      - database_url.env
    ports:
      - "127.0.0.1:5025:8025"
    links:
      - redis
      - memcached
    network_mode: "bridge"
    command: smtpd

  ecs.beat:
    image: ecs/ecs
    environment:
      - ECS_SETTINGS=${ECS_SETTINGS}
    env_file:
      - service_urls.env
      - database_url.env
    links:
      - redis
      - memcached
    network_mode: "bridge"
    command: beat

  memcached:
    image: memcached
    network_mode: "bridge"

  redis:
    image: redis:3
    volumes:
      - /volatile/redis:/data
    network_mode: "bridge"

  mocca:
    build:
      context: mocca
      args:
        - http_proxy
    image: ecs/mocca
    environment:
      - HOSTNAME=${APPLIANCE_DOMAIN}
    volumes:
      - "/etc/appliance/server.cert.pem:/app/import/server.cert.pem:ro"
    ports:
      - "127.0.0.1:5090:8080"
    network_mode: "bridge"

  pdfas:
    build:
      context: pdfas
      args:
        - http_proxy
    image: ecs/pdfas
    environment:
      - HOSTNAME=${APPLIANCE_DOMAIN}
    volumes:
      - "/etc/appliance/server.cert.pem:/app/import/server.cert.pem:ro"
    ports:
      - "127.0.0.1:5095:8080"
    network_mode: "bridge"
