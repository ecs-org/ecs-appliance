version: 2

services:

  ecs.web:
    build:
      context: ecs
      args:
        - http_proxy
    user: app
    volumes:
      - /data/ecs-storage-vault:/app/ecs-storage-vault
    env_file:
      - .env
    expose:
      - "5000"
    links:
      - postgres
      - redis
      - postfix
      - memcached
    command: web

  ecs.worker:
    build:
      context: ecs
      args:
        - http_proxy
    user: app
    volumes:
      - /data/ecs-storage-vault:/app/ecs-storage-vault
    env_file:
      - .env
    links:
      - postgres
      - redis
      - postfix
      - memcached
    command: worker

  ecs.beat:
    build:
      context: ecs
      args:
        - http_proxy
    build: ecs
    user: app
    env_file:
      - .env
    links:
      - postgres
      - redis
      - postfix
      - memcached
    command: beat

  postgres:
    image: postgres:9.5
    volumes:
      - /data/container/ecs-postgres:/var/lib/postgresql/data
    env_file:
      - .env

  memcache:
    image: memcached
    expose:
      - ""

  redis:
    image: redis:3.0
    volumes:
      - /volatile/container/redis:

  postfix:
    image: marvambass/versatile-postfix
    env_file:
      - .env
    volumes:
      -  /volatile/container/postfix:

  mocca:
    build:
      context: mocca
      args:
        - http_proxy
    expose:
      - ""

  pdfas:
    build:
      context: pdfas
      args:
        - http_proxy
    expose:
      - ""

  cadvisor:
    image: google/cadvisor
    expose:
      - "8080"
    command: ["", "--housekeeping_interval=4s"]

  {%- if pillar.get('ecs:sentry:enabled') %}
  sentry:
    image: slafs/sentry
    links:
      - postgres
      - redis
  {%- endif %}

  {%- if pillar.get('ecs:piwik:enabled') %}
  piwik:
    image:
    links:
      - mariadb
  {%- endif %}

  {%- if pillar.get('ecs:prometheus:enabled') %}
  prometheus:
    image:
    links:
      - cadvisor
  {%- endif %}
