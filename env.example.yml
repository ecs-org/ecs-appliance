ecs:
  absolute_url_prefix: https://testecs.domain
  authorative_domain: testecs.domain
  allowed_hosts: ['testecs.domain', 'a.b.c']
  secure_proxy_ssl: true

  debug: false
  sentry_dsn: https://hex:hex@sentry.domain/1
  prometheus:
    enabled: true
  logo_border_color: green
  userswitcher:
    enabled: true
    parameter: -it

  database:
    migrate_auto: true
  # was migrate_auto, FIXME env include in ecs.settings

  email:
    # was filter_ , limited_, moved to email, FIXME in ecs.settings
    filter_outgoing_mail: true
    backend: django.core.mail.backends.console.emailbackend
    limited_email_backend: django.core.mail.backends.console.emailbackend

  client:
    certs:
      required: true
      # FIXME in ecs.settings current: ecs_require_client_certs

  storage:
    volatile:
      device: xvda
    permanent:
      device: xvdb
      snapshot_type: lvm
    vault:
      encrypt:
        sec: |
            test
        pub: |
            test
      sign:
        sec: |
            test
        pub: |
            test

  backup:
    url: ftp://username:password@u1234.your-backup-data.host/backups/mydata
    encrypt_sec: |
        test
    encrypt_pub: |
        test

  recover:
    from_backup: false
    from_dump: false
    dump_filename: "" # if not empty, this file will be picked first

  firstrun:
    example_data: true
    user:
      email: a@b.c
      first: first
      last: last
      cert_pass: pwgen 16
      # creates a office group user with name first last, and email a@b.c
      # a certificate (valid for 24h) is created, crypted with cert_pass and send to a@b.c
      # user can then request "reset password" and get a password recreation link
      # login, save password, create and install a longlived certificate

  local_settings: |
      # test
      x=0
      z="jo"

  authorized_keys: |
      ssh-rsa somethinglong ecs@drone.domain
      ssh-rsa anotherlong admin@some.domain


  # set by builder
  # version:
  # git:
  #   rev:
  #   branch:

  # used by devserver
  # dev:
  #   autostart: true
  #   rebase_to: master
  #   pghero_install: false

  # only internal to settings.py
  # this list is incomplete
  # ca:
  #   root: "os.path.join(project_dir, '..', 'ecs-ca')"
  #   tracking:
  #     enabled: false
  #   meeting:
  #     agenda:
  #       receiver_groups: "('resident board member',)"
  #       grace_period: "timedelta(days=5)"
  #     protocol:
  #       receiver_groups: "('meeting protocol receiver', 'resident board member')"
  #   amg_mpg_vote_receivers: "('basg.ekvoten@ages.at',)"
  #   download:
  #     cache:
  #       dir: "something"
