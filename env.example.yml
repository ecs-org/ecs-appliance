ecs:
  debug: false
  secure_proxy_ssl: true
  allowed_hosts: "nextecs.on.ep3.at"
  authorative_domain: "nextecs.on.ep3.at"
  absolute_url_prefix: "https://nextecs.on.ep3.at"
  sentry_dsn: "https://67ef2698d5ed402fb6e00e0cf13440a1:dfbb1ed17acf41ad82da31326d56c4b5@sentry.on.ep3.at/2"

  logo_border_color: "green"
  userswitcher:
    enabled: "true"
    parameter: "-it"

  migrate_auto: "true"

  filter_outgoing_mail: "true"
  limited_email_backend: "django.core.mail.backends.console.emailbackend"
  email:
    backend: "django.core.mail.backends.console.emailbackend"

  client:
    certs:
      required: true
      # current: ecs_require_client_certs

  storage:

    volatile: xvda
    permanent: xvdb

    vault:
      encrypt:
        sec: |

        pub: |

      sign:
        sec: |

        pub: |

  backup:
    host: 'u1234.your-backup-data.host'
    target_dir: '/backups/mydata'
    username: 'username'
    password: 'password'
    encrypt_sec: |

    encrypt_pub: |

  recover:
    from_backup: false
    from_dump: false
    dump_filename: "" # if not empty, this file will be picked first

  firstrun:
    example_data: true
    user:
      email: a@b.c
      first: first
      last: last
      cert_pass: pwgen 16
      # creates a office group user with name first last, and email a@b.c
      # a certificate (valid for 24h) is created, crypted with cert_pass and send to a@b.c
      # user can then request "reset password" and get a password recreation link
      # login, save password, create and install a longlived certificate

  local_settings: |
      # test
      x=0
      z="jo"

  authorized_keys: |


  # set by builder
  version:
  git:
    rev:
    branch:

  # used by devserver
  dev:
    autostart: true
    rebase_to: master
    pghero_install: false

  # currently only internal to settings.py
  # this list is incomplete
  ca:
      root: os.path.join(project_dir, '..', 'ecs-ca')
    tracking:
      enabled: false
    meeting:
      agenda:
        receiver_groups: ('resident board member',)
        grace_period: timedelta(days=5)
      protocol:
        receiver_groups: ('meeting protocol receiver', 'resident board member')
    amg_mpg_vote_receivers: ('basg.ekvoten@ages.at',)
    download:
      cache:
        dir:
